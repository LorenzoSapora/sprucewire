!function(e){"function"==typeof define&&define.amd?define(e):e()}(function(){var e={alpineEl:null,loadStore:function(e,r){if(console.log("Check Does Not Exist",Spruce.store(e),!!Spruce.store(e)),!Spruce.store(e))throw new Error('[Spruce Entangle] Spruce store "'+e+'" is not registered. Use registerStore.');console.log("Find Livewire Component");var o=this.alpineEl.closest("[wire\\:id]");o&&o.__livewire&&(console.log("Livewire Component Found"),Object.entries(r).forEach(function(r){var n=r[0],t=r[1];if(console.log("Loop Store",n,t),!Spruce.store(e)[n])throw new Error('[Spruce Entangle] Spruce store "'+e+'" does not have property "'+n+'".');if(t&&"object"==typeof t&&t.livewireEntangle){console.log("Property",n,t);var i=t.livewireEntangle,l=t.isDeferred,c=o.__livewire;console.log("Spruce Property Value",JSON.parse(JSON.stringify(Spruce.store(e)[n]))),JSON.stringify(Spruce.store(e)[n])!==JSON.stringify(o.__livewire.getPropertyValueIncludingDefers(i))&&c.set(i,JSON.parse(JSON.stringify(Spruce.store(e)[n])),l),console.log("Property Value",o.__livewire.getPropertyValueIncludingDefers(i)),Spruce.watch(e+"."+n,function(e){console.log("Spruce Watcher",e),JSON.stringify(e)!==JSON.stringify(o.__livewire.getPropertyValueIncludingDefers(i))&&(console.log("Spruce Not Equal"),c.set(i,e,l))}),c.watch(i,function(r){console.log("Livewire Watcher",r),Spruce.store(e)[n]=void 0!==r?JSON.parse(JSON.stringify(r)):r})}}),console.log(Spruce.store(e)))},registerStore:function(e,r){if(console.log("Check Exists",Spruce.store(e),!!Spruce.store(e)),Spruce.store(e))throw new Error('[Spruce Entangle] Spruce store "'+e+'" is already registered. Use loadStore.');console.log("Register Store",e,r),Spruce.store(e,r),console.log("Find Livewire Component");var o=this.alpineEl.closest("[wire\\:id]");o&&o.__livewire&&(console.log("Livewire Component Found"),Object.entries(Spruce.store(e)).forEach(function(r){var n=r[0],t=r[1];if(t&&"object"==typeof t&&t.livewireEntangle){console.log("Property",n,t);var i=t.livewireEntangle,l=t.isDeferred,c=o.__livewire;console.log("Livewire Property Value",JSON.parse(JSON.stringify(o.__livewire.get(i)))),Spruce.store(e)[n]=JSON.parse(JSON.stringify(o.__livewire.get(i))),console.log("Property Value",Spruce.store(e)[n]),Spruce.watch(e+"."+n,function(e){console.log("Spruce Watcher",e),JSON.stringify(e)!==JSON.stringify(o.__livewire.getPropertyValueIncludingDefers(i))&&(console.log("Spruce Not Equal"),c.set(i,e,l))}),c.watch(i,function(r){console.log("Livewire Watcher",r),Spruce.store(e)[n]=void 0!==r?JSON.parse(JSON.stringify(r)):r})}}),console.log(Spruce.store(e)))}},r={start:function(){console.log("start"),this.attach()},attach:function(){var e=this;this.checkDependencies(),window.Alpine.addMagicProperty("spruceEntangle",function(r){return console.log("Spruce Entangle"),e.getElEntangle(r)}),window.Alpine.addMagicProperty("entangleProperty",function(e){return function(e,r){return void 0===r&&(r=!1),{isDeferred:r,livewireEntangle:e}}})},checkDependencies:function(){if(!window.Alpine)throw new Error("[Spruce Entangle] Alpine must be running.");if(!window.Spruce)throw new Error("[Spruce Entangle] Spruce must be running.");return!0},getElEntangle:function(r){return Object.assign({},e,{alpineEl:r})},registerStore:function(e,r,o){this.getElEntangle(e).registerStore(r,o)}};window.SpruceEntangle=r;var o=window.deferLoadingAlpine||function(e){e()};window.deferLoadingAlpine=function(e){window.SpruceEntangle.start(),o(e)}});
//# sourceMappingURL=spruce-entangle.umd.js.map
